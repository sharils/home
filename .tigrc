# Settings
# --------
# Most of these settings can be toggleable, either via the toggle-*
# actions or via the option menu (bound to `o` by default).

# View settings
#
# Supported column types and their options:
#
#   author
#    - display (enum) [no|full|abbreviated|email|email-user]
#                                       : Show author information?
#   commit-title
#    - display (bool)                   : Show the commit title?
#    - graph (enum) [no|v2|v1]          : Show the commit graph? (main view only)
#    - refs (bool)                      : Show branches, tags and remotes? (main view only)
#    - overflow (boolint)               : Highlight overflows? Defaults to 50 when enabled.
#
#   date
#    - display (enum) [no|default|relative|relative-compact|custom]
#                                       : Show dates?
#    - local (bool)                     : Show local dates?
#    - format (string)                  : Custom strftime(3) format
#
#   file-name
#    - display (enum) [no|always|auto]  : Show file names?
#
#   file-size
#    - display (enum) [no|default|units]    : Show file sizes?
#
#   id
#    - display (bool)                   : Show commit/tree ID?
#
#   line-number
#    - display (bool)                   : Show line numbers?
#    - interval (int)                   : Interval between line numbers; defaults to 5
#
#   mode
#    - display (bool)                   : Show file modes?
#
#   status
#    - display (enum) [no|short|long]   : Show status label?
#
#   text
#    - display (bool)                   : Show text?
#    - commit-title-overflow (boolint)  : Highlight overflow in log and diff view?
#
# All columns also support a width option to configure the max width of
# the column. Use zero (the default value) to auto-size the column based
# on the content.

set diff-highlight              = true
set diff-options                = --find-copies --show-signature
set ignore-case                 = smart-case
set blame-options               = -CCC
set log-options                 = --show-signature
set mouse                       = yes
set mouse-scroll                = 1
set status-show-untracked-files = yes

# User-defined commands
# ---------------------
# These commands allow to run shell commands directly from within Tig.
# Unless otherwise specified, commands are run in the foreground with
# their console output shown (as if '!' was specified). When multiple
# command options are specified their behavior are combined, e.g. "?<git
# commit" will prompt the user whether to execute the command and will
# exit Tig after completion.
#
#   !   Run the command in the foreground with output shown.
#   @   Run the command in the background with no output.
#   ?   Prompt the user before executing the command.
#   <   Exit Tig after executing the command.
#
# User-defined commands can optionally refer to Tig's internal state
# using the following variable names, which are substituted before
# commands are run:
#
#   %(head)         The current ref ID. Defaults to HEAD
#   %(commit)       The current commit ID.
#   %(blob)         The current blob ID.
#   %(branch)       The current branch name.
#   %(remote)       The current remote name.
#   %(tag)          The current tag name.
#   %(stash)        The current stash name.
#   %(directory)    The current directory path in the tree view;
#                   empty for the root directory.
#   %(file)         The currently selected file.
#   %(ref)          The reference given to blame or HEAD if undefined.
#   %(revargs)      The revision arguments passed on the command line.
#   %(fileargs)     The file arguments passed on the command line.
#   %(cmdlineargs)  All other options passed on the command line.
#   %(diffargs)     The diff options from `diff-options` or `TIG_DIFF_OPTS`
#   %(prompt)       Prompt for the argument value.

bind generic S             :source ~/.tigrc
bind reflog  C             @git checkout %(branch)
bind refs    C             @git checkout %(branch)

# bind generic <C-F>         move-page-down
# bind generic <C-B>         move-page-up

source ~/git/github.com/sharils/home/.tig/bind-deprecated.tigrc
source ~/git/github.com/sharils/home/.tig/bind-fugitive.tigrc
source ~/git/github.com/sharils/home/.tig/bind-gitconfig.tigrc

# Colors
# ------

# The colors in the UI can be customized. In addition to the colors used
# for the UI you can also define new colors to use in the pager, blob,
# diff, and stage views by placing the text to match for in quotes.
#
# Prefix the name of a view to set a color only for that view, e.g.
#
#   color grep.file blue default
#
# As an example, this setting will to color Signed-off-by lines with a
# yellow foreground color and use the default background color.
#
#   color "    Signed-off-by"   yellow  default
#
# Note the four leading spaces in the string to match. This is because
# Git automatically indents commit messages by four spaces.

color cursor black green bold

# Reference
# ------

# - https://jonas.github.io/tig/doc/tigrc.5.html
# - https://github.com/jonas/tig/blob/master/tigrc
